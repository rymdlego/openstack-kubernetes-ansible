---
- name: Check if Kubernetes has already been initialized
  stat:
    path: /etc/kubernetes/admin.conf
  register: kubernetes_init_stat

- name: Generate Kubernetes certificate key
  command: kubeadm certs certificate-key
  register: certificate_key_result
  when: primary_cp is defined
  changed_when: false

- name: Set the kubeadm certificate-key for all control planes
  set_fact:
    certificate_key: "{{ certificate_key_result.stdout }}"
  when: certificate_key_result.stdout is defined
  delegate_to: "{{ item }}"
  delegate_facts: true
  with_items: "{{ groups['controlplanes'] }}"

- name: Initialize Kubernetes on master
  command: 'kubeadm init --pod-network-cidr={{ pod_network }} --control-plane-endpoint "{{ api_hostname }}:6443" --upload-certs --certificate-key {{ certificate_key }}'
  until: k8s_init.stdout.find('successfully') != -1
  retries: 10
  delay: 30
  register: k8s_init
  when: primary_cp is defined and not kubernetes_init_stat.stat.exists

- name: Generate Kubernetes join command
  command: kubeadm token create --print-join-command
  register: join_command_result
  when: primary_cp is defined
  changed_when: false

- name: Set the kubeadm join command globally
  set_fact:
    join_command: "{{ join_command_result.stdout }}"
  when: join_command_result.stdout is defined
  delegate_to: "{{ item }}"
  delegate_facts: true
  with_items: "{{ groups['kubernetes'] }}"

- name: Check if control plane is joined
  stat:
    path: /etc/kubernetes/kubelet.conf
  register: controlplane_joined_stat

- name: Join other control planes
  command: "{{ join_command }} --control-plane --certificate-key {{ certificate_key }}"
  when: not controlplane_joined_stat.stat.exists

- name: Ensure .kube directory exists
  file:
    path: ~/.kube
    state: directory
    mode: 0755

- name: Symlink the kubectl admin.conf to /root/.kube/config
  file:
    src: /etc/kubernetes/admin.conf
    dest: ~/.kube/config
    state: link
    mode: 0644

- name: Ensure .kube directory exists for non-root user
  file:
    path: "/home/{{ ansible_user }}/.kube"
    state: directory
    mode: 0755
    owner: "{{ ansible_user }}"
    group: "{{ ansible_user }}"

- name: Copy admin.conf to non-root user
  copy:
    src: /etc/kubernetes/admin.conf
    dest: "/home/{{ ansible_user }}/.kube/config"
    owner: "{{ ansible_user }}"
    group: "{{ ansible_user }}"
    mode: 0644
    remote_src: yes

